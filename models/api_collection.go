// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APICollection api collection
//
// swagger:model apiCollection
type APICollection string

const (

	// APICollectionTournament captures enum value "tournament"
	APICollectionTournament APICollection = "tournament"

	// APICollectionRr captures enum value "rr"
	APICollectionRr APICollection = "rr"

	// APICollectionSe captures enum value "se"
	APICollectionSe APICollection = "se"

	// APICollectionGroup captures enum value "group"
	APICollectionGroup APICollection = "group"

	// APICollectionRound captures enum value "round"
	APICollectionRound APICollection = "round"

	// APICollectionSeries captures enum value "series"
	APICollectionSeries APICollection = "series"

	// APICollectionGame captures enum value "game"
	APICollectionGame APICollection = "game"

	// APICollectionEntry captures enum value "entry"
	APICollectionEntry APICollection = "entry"

	// APICollectionScore captures enum value "score"
	APICollectionScore APICollection = "score"

	// APICollectionFormatSeries captures enum value "format_series"
	APICollectionFormatSeries APICollection = "format_series"

	// APICollectionFormatScore captures enum value "format_score"
	APICollectionFormatScore APICollection = "format_score"
)

// for schema
var apiCollectionEnum []interface{}

func init() {
	var res []APICollection
	if err := json.Unmarshal([]byte(`["tournament","rr","se","group","round","series","game","entry","score","format_series","format_score"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiCollectionEnum = append(apiCollectionEnum, v)
	}
}

func (m APICollection) validateAPICollectionEnum(path, location string, value APICollection) error {
	if err := validate.EnumCase(path, location, value, apiCollectionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this api collection
func (m APICollection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPICollectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
