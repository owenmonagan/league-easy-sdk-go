// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APICollection api collection
//
// swagger:model apiCollection
type APICollection string

const (

	// APICollectionTOURNAMENT captures enum value "TOURNAMENT"
	APICollectionTOURNAMENT APICollection = "TOURNAMENT"

	// APICollectionRR captures enum value "RR"
	APICollectionRR APICollection = "RR"

	// APICollectionSE captures enum value "SE"
	APICollectionSE APICollection = "SE"

	// APICollectionGROUP captures enum value "GROUP"
	APICollectionGROUP APICollection = "GROUP"

	// APICollectionROUND captures enum value "ROUND"
	APICollectionROUND APICollection = "ROUND"

	// APICollectionSERIES captures enum value "SERIES"
	APICollectionSERIES APICollection = "SERIES"

	// APICollectionGAME captures enum value "GAME"
	APICollectionGAME APICollection = "GAME"

	// APICollectionENTRY captures enum value "ENTRY"
	APICollectionENTRY APICollection = "ENTRY"

	// APICollectionSCORE captures enum value "SCORE"
	APICollectionSCORE APICollection = "SCORE"

	// APICollectionFORMATSERIES captures enum value "FORMAT_SERIES"
	APICollectionFORMATSERIES APICollection = "FORMAT_SERIES"

	// APICollectionFORMATSCORE captures enum value "FORMAT_SCORE"
	APICollectionFORMATSCORE APICollection = "FORMAT_SCORE"
)

// for schema
var apiCollectionEnum []interface{}

func init() {
	var res []APICollection
	if err := json.Unmarshal([]byte(`["TOURNAMENT","RR","SE","GROUP","ROUND","SERIES","GAME","ENTRY","SCORE","FORMAT_SERIES","FORMAT_SCORE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiCollectionEnum = append(apiCollectionEnum, v)
	}
}

func (m APICollection) validateAPICollectionEnum(path, location string, value APICollection) error {
	if err := validate.EnumCase(path, location, value, apiCollectionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this api collection
func (m APICollection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPICollectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
