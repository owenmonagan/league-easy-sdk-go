// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/models"
)

// RoundServiceQueryReader is a Reader for the RoundServiceQuery structure.
type RoundServiceQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoundServiceQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRoundServiceQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRoundServiceQueryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRoundServiceQueryOK creates a RoundServiceQueryOK with default headers values
func NewRoundServiceQueryOK() *RoundServiceQueryOK {
	return &RoundServiceQueryOK{}
}

/*RoundServiceQueryOK handles this case with default header values.

A successful response.
*/
type RoundServiceQueryOK struct {
	Payload *models.APIRoundResponseList
}

func (o *RoundServiceQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/round/query][%d] roundServiceQueryOK  %+v", 200, o.Payload)
}

func (o *RoundServiceQueryOK) GetPayload() *models.APIRoundResponseList {
	return o.Payload
}

func (o *RoundServiceQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIRoundResponseList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoundServiceQueryDefault creates a RoundServiceQueryDefault with default headers values
func NewRoundServiceQueryDefault(code int) *RoundServiceQueryDefault {
	return &RoundServiceQueryDefault{
		_statusCode: code,
	}
}

/*RoundServiceQueryDefault handles this case with default header values.

An unexpected error response.
*/
type RoundServiceQueryDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the round service query default response
func (o *RoundServiceQueryDefault) Code() int {
	return o._statusCode
}

func (o *RoundServiceQueryDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/round/query][%d] RoundService_Query default  %+v", o._statusCode, o.Payload)
}

func (o *RoundServiceQueryDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *RoundServiceQueryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
