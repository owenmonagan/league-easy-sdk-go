// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/models"
)

// GameServiceComputeReader is a Reader for the GameServiceCompute structure.
type GameServiceComputeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GameServiceComputeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGameServiceComputeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGameServiceComputeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGameServiceComputeOK creates a GameServiceComputeOK with default headers values
func NewGameServiceComputeOK() *GameServiceComputeOK {
	return &GameServiceComputeOK{}
}

/*GameServiceComputeOK handles this case with default header values.

A successful response.
*/
type GameServiceComputeOK struct {
	Payload *models.APIGameResponse
}

func (o *GameServiceComputeOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/game/compute][%d] gameServiceComputeOK  %+v", 200, o.Payload)
}

func (o *GameServiceComputeOK) GetPayload() *models.APIGameResponse {
	return o.Payload
}

func (o *GameServiceComputeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIGameResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGameServiceComputeDefault creates a GameServiceComputeDefault with default headers values
func NewGameServiceComputeDefault(code int) *GameServiceComputeDefault {
	return &GameServiceComputeDefault{
		_statusCode: code,
	}
}

/*GameServiceComputeDefault handles this case with default header values.

An unexpected error response.
*/
type GameServiceComputeDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the game service compute default response
func (o *GameServiceComputeDefault) Code() int {
	return o._statusCode
}

func (o *GameServiceComputeDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/game/compute][%d] GameService_Compute default  %+v", o._statusCode, o.Payload)
}

func (o *GameServiceComputeDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *GameServiceComputeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
