// Code generated by go-swagger; DO NOT EDIT.

package utility

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/gen/models"
)

// UtilityServiceReadyReader is a Reader for the UtilityServiceReady structure.
type UtilityServiceReadyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UtilityServiceReadyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUtilityServiceReadyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUtilityServiceReadyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUtilityServiceReadyOK creates a UtilityServiceReadyOK with default headers values
func NewUtilityServiceReadyOK() *UtilityServiceReadyOK {
	return &UtilityServiceReadyOK{}
}

/*UtilityServiceReadyOK handles this case with default header values.

A successful response.
*/
type UtilityServiceReadyOK struct {
	Payload models.APIResponse
}

func (o *UtilityServiceReadyOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/utl/ready][%d] utilityServiceReadyOK  %+v", 200, o.Payload)
}

func (o *UtilityServiceReadyOK) GetPayload() models.APIResponse {
	return o.Payload
}

func (o *UtilityServiceReadyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUtilityServiceReadyDefault creates a UtilityServiceReadyDefault with default headers values
func NewUtilityServiceReadyDefault(code int) *UtilityServiceReadyDefault {
	return &UtilityServiceReadyDefault{
		_statusCode: code,
	}
}

/*UtilityServiceReadyDefault handles this case with default header values.

An unexpected error response.
*/
type UtilityServiceReadyDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the utility service ready default response
func (o *UtilityServiceReadyDefault) Code() int {
	return o._statusCode
}

func (o *UtilityServiceReadyDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/utl/ready][%d] UtilityService_Ready default  %+v", o._statusCode, o.Payload)
}

func (o *UtilityServiceReadyDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *UtilityServiceReadyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
