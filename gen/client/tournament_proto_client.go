// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/gen/client/entry"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/format_score"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/game"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/round"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/round_robin"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/score"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/score_format"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/series"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/series_format"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/single_elimination"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/tournament"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/tournaments"
	"github.com/owenmonagan/toureasy-sdk-go/gen/client/utility"
)

// Default tournament proto HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new tournament proto HTTP client.
func NewHTTPClient(formats strfmt.Registry) *TournamentProto {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new tournament proto HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *TournamentProto {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new tournament proto client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *TournamentProto {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(TournamentProto)
	cli.Transport = transport
	cli.Entry = entry.New(transport, formats)
	cli.FormatScore = format_score.New(transport, formats)
	cli.Game = game.New(transport, formats)
	cli.Round = round.New(transport, formats)
	cli.RoundRobin = round_robin.New(transport, formats)
	cli.Score = score.New(transport, formats)
	cli.ScoreFormat = score_format.New(transport, formats)
	cli.Series = series.New(transport, formats)
	cli.SeriesFormat = series_format.New(transport, formats)
	cli.SingleElimination = single_elimination.New(transport, formats)
	cli.Tournament = tournament.New(transport, formats)
	cli.Tournaments = tournaments.New(transport, formats)
	cli.Utility = utility.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// TournamentProto is a client for tournament proto
type TournamentProto struct {
	Entry entry.ClientService

	FormatScore format_score.ClientService

	Game game.ClientService

	Round round.ClientService

	RoundRobin round_robin.ClientService

	Score score.ClientService

	ScoreFormat score_format.ClientService

	Series series.ClientService

	SeriesFormat series_format.ClientService

	SingleElimination single_elimination.ClientService

	Tournament tournament.ClientService

	Tournaments tournaments.ClientService

	Utility utility.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *TournamentProto) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Entry.SetTransport(transport)
	c.FormatScore.SetTransport(transport)
	c.Game.SetTransport(transport)
	c.Round.SetTransport(transport)
	c.RoundRobin.SetTransport(transport)
	c.Score.SetTransport(transport)
	c.ScoreFormat.SetTransport(transport)
	c.Series.SetTransport(transport)
	c.SeriesFormat.SetTransport(transport)
	c.SingleElimination.SetTransport(transport)
	c.Tournament.SetTransport(transport)
	c.Tournaments.SetTransport(transport)
	c.Utility.SetTransport(transport)
}
