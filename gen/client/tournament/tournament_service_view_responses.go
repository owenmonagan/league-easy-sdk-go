// Code generated by go-swagger; DO NOT EDIT.

package tournament

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/gen/models"
)

// TournamentServiceViewReader is a Reader for the TournamentServiceView structure.
type TournamentServiceViewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TournamentServiceViewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTournamentServiceViewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTournamentServiceViewDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTournamentServiceViewOK creates a TournamentServiceViewOK with default headers values
func NewTournamentServiceViewOK() *TournamentServiceViewOK {
	return &TournamentServiceViewOK{}
}

/*TournamentServiceViewOK handles this case with default header values.

A successful response.
*/
type TournamentServiceViewOK struct {
	Payload *models.APITournamentResponse
}

func (o *TournamentServiceViewOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/tournaments/{id}][%d] tournamentServiceViewOK  %+v", 200, o.Payload)
}

func (o *TournamentServiceViewOK) GetPayload() *models.APITournamentResponse {
	return o.Payload
}

func (o *TournamentServiceViewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APITournamentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTournamentServiceViewDefault creates a TournamentServiceViewDefault with default headers values
func NewTournamentServiceViewDefault(code int) *TournamentServiceViewDefault {
	return &TournamentServiceViewDefault{
		_statusCode: code,
	}
}

/*TournamentServiceViewDefault handles this case with default header values.

An unexpected error response.
*/
type TournamentServiceViewDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the tournament service view default response
func (o *TournamentServiceViewDefault) Code() int {
	return o._statusCode
}

func (o *TournamentServiceViewDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/tournaments/{id}][%d] TournamentService_View default  %+v", o._statusCode, o.Payload)
}

func (o *TournamentServiceViewDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *TournamentServiceViewDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
