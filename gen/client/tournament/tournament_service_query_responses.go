// Code generated by go-swagger; DO NOT EDIT.

package tournament

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/gen/models"
)

// TournamentServiceQueryReader is a Reader for the TournamentServiceQuery structure.
type TournamentServiceQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TournamentServiceQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTournamentServiceQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTournamentServiceQueryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTournamentServiceQueryOK creates a TournamentServiceQueryOK with default headers values
func NewTournamentServiceQueryOK() *TournamentServiceQueryOK {
	return &TournamentServiceQueryOK{}
}

/*TournamentServiceQueryOK handles this case with default header values.

A successful response.
*/
type TournamentServiceQueryOK struct {
	Payload *models.APITournamentResponseList
}

func (o *TournamentServiceQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/tournament/query][%d] tournamentServiceQueryOK  %+v", 200, o.Payload)
}

func (o *TournamentServiceQueryOK) GetPayload() *models.APITournamentResponseList {
	return o.Payload
}

func (o *TournamentServiceQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APITournamentResponseList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTournamentServiceQueryDefault creates a TournamentServiceQueryDefault with default headers values
func NewTournamentServiceQueryDefault(code int) *TournamentServiceQueryDefault {
	return &TournamentServiceQueryDefault{
		_statusCode: code,
	}
}

/*TournamentServiceQueryDefault handles this case with default header values.

An unexpected error response.
*/
type TournamentServiceQueryDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the tournament service query default response
func (o *TournamentServiceQueryDefault) Code() int {
	return o._statusCode
}

func (o *TournamentServiceQueryDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/tournament/query][%d] TournamentService_Query default  %+v", o._statusCode, o.Payload)
}

func (o *TournamentServiceQueryDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *TournamentServiceQueryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
