// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owenmonagan/toureasy-sdk-go/gen/models"
)

// TournamentServiceViewMixin1Reader is a Reader for the TournamentServiceViewMixin1 structure.
type TournamentServiceViewMixin1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TournamentServiceViewMixin1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTournamentServiceViewMixin1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTournamentServiceViewMixin1Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTournamentServiceViewMixin1OK creates a TournamentServiceViewMixin1OK with default headers values
func NewTournamentServiceViewMixin1OK() *TournamentServiceViewMixin1OK {
	return &TournamentServiceViewMixin1OK{}
}

/*TournamentServiceViewMixin1OK handles this case with default header values.

A successful response.
*/
type TournamentServiceViewMixin1OK struct {
	Payload *models.APIEntry
}

func (o *TournamentServiceViewMixin1OK) Error() string {
	return fmt.Sprintf("[GET /api/v1/entries/{uuid}][%d] tournamentServiceViewMixin1OK  %+v", 200, o.Payload)
}

func (o *TournamentServiceViewMixin1OK) GetPayload() *models.APIEntry {
	return o.Payload
}

func (o *TournamentServiceViewMixin1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTournamentServiceViewMixin1Default creates a TournamentServiceViewMixin1Default with default headers values
func NewTournamentServiceViewMixin1Default(code int) *TournamentServiceViewMixin1Default {
	return &TournamentServiceViewMixin1Default{
		_statusCode: code,
	}
}

/*TournamentServiceViewMixin1Default handles this case with default header values.

An unexpected error response.
*/
type TournamentServiceViewMixin1Default struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the tournament service view mixin1 default response
func (o *TournamentServiceViewMixin1Default) Code() int {
	return o._statusCode
}

func (o *TournamentServiceViewMixin1Default) Error() string {
	return fmt.Sprintf("[GET /api/v1/entries/{uuid}][%d] TournamentService_ViewMixin1 default  %+v", o._statusCode, o.Payload)
}

func (o *TournamentServiceViewMixin1Default) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *TournamentServiceViewMixin1Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
